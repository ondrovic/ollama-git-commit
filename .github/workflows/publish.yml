name: Publish to NPM

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.16

      - name: Install dependencies
        run: bun install

      - name: Extract version from tag
        id: get-version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG_VERSION"

      - name: Verify package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ steps.get-version.outputs.version }}
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "package.json version: $PACKAGE_VERSION"
            echo "Git tag version: $TAG_VERSION"
            echo "Make sure your release script updates package.json before creating the tag"
            exit 1
          fi
          
          echo "✅ Versions match: $PACKAGE_VERSION"

      - name: Check if version exists on NPM
        id: check-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME="@condrovic/ollama-git-commit"
          
          if npm view ${PACKAGE_NAME}@${VERSION} version > /dev/null 2>&1; then
            echo "❌ Version $VERSION already exists on NPM"
            echo "This should not happen if the release script is working correctly"
            exit 1
          else
            echo "✅ Version $VERSION is available for publishing"
          fi

      - name: Build package
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Publish to NPM (single publish)
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}